/**************************************************************
*     ####         #                               #          * Jobuzzle - Copyright All rights reserved
*     ####         #                               #          *
*       ##  #####  ######  #     # ####### ####### #  #####   * @Author: revers
*       ## #     # #     # #     #      #       #  # #     #  *
*       ## #     # #     # #     #     #       #   # #     #  * @Date:   2015-08-08 11:12:48
*       ## #     # #     # #     #    #       #    # #     #  *
*       ## #     # #     # #     #   #       #     # ######   * @Last Modified by:   revers
*  ####### #     # #     # #     #  #       #      # #        *
*  ######   #####   ######  #####  ####### ####### # #######  * @Last Modified time: 2015-09-12 13:22:08
**************************************************************/

class BodyCoverTemplateMainView extends MasterView {

	public initialState : function () {
		return ({
			visible : false,
			lock : false,
			opacity : this['_template'].getDefaultOpacity()
		});
	}

	public coverShow : function (opacity) {
		if (opacity == undefined || opacity == null)
			opacity = this['_template'].getDefaultOpacity();
		this['setState']({ 'visible' : true, 'opacity' : opacity });
	}

	public coverHide : function () {
		var dispatcher = serviceLocator.get('Dispatcher');

		if (this['_template']._referer) {
			dispatcher.trigger(this['_template']._referer);
			this['_template']._referer = null;
		}
		this['setState']({ 'visible' : false });
	}

	public lock : function () {
		this['setState']({ 'lock' : true });
	}

	public unlock : function () {
		this['setState']({ 'lock' : false });
	}

	public render : function () {
		var activeState = 'disable';
		var style = {
			opacity : this.state.opacity / 100
		};

		if (this.state.visible || this.state.lock)
			activeState = 'enable'
		return (<div className={activeState} style={style} id="cover" onClick={this.coverHide.bind(this)}></div>);
	}

}