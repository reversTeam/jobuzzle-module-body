/**************************************************************
*     ####         #                               #          * Jobuzzle - Copyright All rights reserved
*     ####         #                               #          *
*       ##  #####  ######  #     # ####### ####### #  #####   * @Author: revers
*       ## #     # #     # #     #      #       #  # #     #  *
*       ## #     # #     # #     #     #       #   # #     #  * @Date:   2015-08-08 11:12:48
*       ## #     # #     # #     #    #       #    # #     #  *
*       ## #     # #     # #     #   #       #     # ######   * @Last Modified by:   revers
*  ####### #     # #     # #     #  #       #      # #        *
*  ######   #####   ######  #####  ####### ####### # #######  * @Last Modified time: 2015-11-10 16:30:03
**************************************************************/

class BodyCoverTemplateMainView extends MasterView {

	public initialState : function () {
		return ({
			'visible' : false,
			'lock' : false,
			'opacity' : this['_template'].getDefaultOpacity()
		});
	}

	public coverShow : function (config) {
		if (config['opacity'] == undefined || config['opacity'] == null)
			config['opacity'] = this['_template'].getDefaultOpacity();
		this['setState']({ 'visible' : true, 'opacity' : config['opacity'], 'lock' : config['lock'] });
	}

	public coverHide : function () {
		var dispatcher = serviceLocator.get('Dispatcher');

		if (this['_template']._referer) {
			dispatcher.trigger(this['_template']._referer);
			this['_template']._referer = null;
		}
		this['setState']({ 'visible' : false, 'lock' : false });
	}

	public coverHideClick : function () {
		if (!this.state['lock'])
			this.coverHide();
	}

	public lock : function () {
		this['setState']({ 'lock' : true });
	}

	public unlock : function () {
		this['setState']({ 'lock' : false });
	}

	public componentDidMount : function() {
      this.getDOMNode().onclick = function() {}
    }

	public render : function () {
		var activeState = 'disable';
		var style = {
			opacity : this.state['opacity'] / 100
		};

		if (this.state['visible'])
			activeState = 'enable'
		return (<div className={activeState} style={style} id="cover" onClick={this.coverHideClick.bind(this)}></div>);
	}

}